%    Copyright (C) 2002 Aladdin Enterprises.  All rights reserved.
% 
%  This file is part of GNU ghostscript
%
%  GNU ghostscript is free software; you can redistribute it and/or modify it under
%  the terms of the version 2 of the GNU General Public License as published by the Free Software
%  Foundation.
%
%  GNU ghostscript is distributed in the hope that it will be useful, but WITHOUT
%  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
%  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
%
%  You should have received a copy of the GNU General Public License along with
%  ghostscript; see the file COPYING. If not, write to the Free Software Foundation,
%  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
%
% $Id: gs_ciecs3.ps,v 1.4 2007/08/01 14:25:36 jemarch Exp $
% Level 3 CIEBased color space method dictionaries.
% This assumes gs_ciecs2.ps has already been processed.

%
% The validation routines in these method dictionaries perform only
% partial validations; the .setcie* operators will perform the rest.
%


.currentglobal true .setglobal
.cspace_util begin


/.setciedefspace where
  {
    pop
    colorspacedict
    /CIEBasedDEF
      mark
        /cs_potential_indexed_base true
        /cs_potential_pattern_base true
        /cs_potential_alternate true
        /cs_potential_icc_alternate true
        /cs_get_ncomps //ncomps_3

        /cs_get_range
          {
            1 get /RangeDEF .knownget not
              { //dflt_range_3 }
            if
          }
        bind

	% per Page 233 of the PLRM, default color should be as close to 0.0 as possible
	% within the RangeDEF
        /cs_get_default_color { 1 get /RangeDEF .knownget {
	    aload pop pop 5 1 roll pop 4 1 roll pop 3 1 roll
	  } {
	    0.0 0.0 0.0 
	  } ifelse 
	} bind
        /cs_get_currentgray //no_currentgray
        /cs_get_currentrgb //no_currentrgb
        /cs_get_currentcmyk //no_currentcmyk
        /cs_validate //check_cie_cspace
        /cs_substitute //dup_1
        /cs_prepare {}

        /cs_install
          {
            NOCIE
              { pop /DeviceRGB //.cs_install exec }
              { 1 get .setciedefspace }
            ifelse
          }
        bind

        /cs_prepare_color //validate_3
        /cs_complete_setcolor //pop_1
      .dicttomark
    put
  }
if


/.setciedefgspace where
  {
    pop
    colorspacedict
    /CIEBasedDEFG
      mark
        /cs_potential_indexed_base true
        /cs_potential_pattern_base true
        /cs_potential_alternate true
        /cs_potential_icc_alternate true
        /cs_get_ncomps //ncomps_4

        /cs_get_range
          {
            1 get /RangeDEFG .knownget not
              { //dflt_range_4 }
            if
          }
        bind

	% per Page 233 of the PLRM, default color should be as close to 0.0 as possible
	% within the RangeDEFG
        /cs_get_default_color { 1 get /RangeDEFG .knownget {
	    aload pop pop 7 1 roll pop 6 1 roll pop 5 1 roll pop 4 1 roll
	  } {
	    0.0 0.0 0.0 0.0
	  } ifelse 
	} bind
        /cs_get_currentgray //no_currentgray
        /cs_get_currentrgb //no_currentrgb
        /cs_get_currentcmyk //no_currentcmyk
        /cs_validate //check_cie_cspace
        /cs_substitute //dup_1
        /cs_prepare {}

        % the use of the DeviceCMYK color space is questionable:
        % it will likely have the wrong polarity
        /cs_install
          {
            NOCIE
              { pop /DeviceCMYK //.cs_install exec }
              { 1 get .setciedefgspace }
            ifelse
          }
        bind

        /cs_prepare_color //validate_4
        /cs_complete_setcolor //pop_1
      .dicttomark
    put
  }
if


end     % .cspace_util
.setglobal
